$breakpoints-names: (
	phone
	smartphone
	phablet
	tablet
	notebook
	desktop
	hires
);

$breakpoints-borders: (
	(0px, 480px),
	(481px, 640px),
	(641px, 768px),
	(769px, 1024px),
	(1025px, 1280px),
	(1281px, 1600px),
	(1601px, false)
);

@function get-breakpoints-borders($name) {
	$borders-id: index($breakpoints-names, $name);
	$borders-list: nth($breakpoints-borders, $borders-id);
	@return $borders-list;
}

@mixin media($value-1, $value-2:"undefined") {
	$query: false;

	@if $value-2 == "undefined" {
		$breakpoints: get-breakpoints-borders($value-1);
		$query: "(min-width:#{nth($breakpoints, 1)}) and (max-width:#{nth($breakpoints, 2)})";
	} @else {
		@if ($value-1) and ($value-2) {
			$breakpoint-1: get-breakpoints-borders($value-1);
			$breakpoint-2: get-breakpoints-borders($value-2);
			$query: "(min-width:#{nth($breakpoint-1, 1)}) and (max-width:#{nth($breakpoint-2, 2)})";
		} @else if ($value-1) {
			$breakpoints: get-breakpoints-borders($value-1);
			$query: "(min-width:#{nth($breakpoints, 1)})";
		} @else if ($value-2) {
			$breakpoints: get-breakpoints-borders($value-2);
			$query: "(max-width:#{nth($breakpoints, 2)})";
		}
	}

	@if ($query) {
		@media screen and #{$query} {
			@content;
		}
	}
}
